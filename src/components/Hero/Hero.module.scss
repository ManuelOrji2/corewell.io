.heroSec {
  box-sizing: border-box;
  width: 100vw;
  height: 100vh;
  display: flex;
  align-items: center;
  gap: 10px;
  justify-content: center;
  flex-direction: column;
  padding: 0 100px 0;
  margin-top: 20px;

  .hero {
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: column;
  }

  .featureOne {
    display: flex;
    align-items: center;
    flex-direction: column;
    font-size: 86px;

    .featureTwo {
      display: flex;
      align-items: center;
      gap: 30px;
      border-radius: 20px;

      .videoCtn {
        width: 254px;
        height: 90px;
        border-radius: 20px;

        img {
          width: 254px;
          height: 90px;
          border-radius: 20px;
          filter: grayscale(100%);
        }
        img:hover {
          filter: none;
        }
      }
    }
  }

  .specBtn {
    padding: 15px 20px;
    border: none;
    outline: none;
    background-color: #fff;
    font-size: 16px;
    cursor: pointer;
  }

  .getBtn {
    padding: 15px 20px;
    border: none;
    outline: none;
    background-color: #d6ff01;
    font-size: 16px;
    cursor: pointer;
  }

  .btnsContainer {
    display: flex;
    align-items: center;
    gap: 16px;
  }

  .heroAnimatedCont {
    display: flex;
    align-items: center;
    width: 200vw;
    gap: 30px;
    height: 134px;
    position: relative;

    .animatedTexts {
      animation: moveLeft 10s infinite;
      animation-timing-function: cubic-bezier(1, 1, 1, 1);
    }

    // .leftBlur{
    //     position: absolute;
    //     left: 0;
    //     height: 900px;
    //     width: 134px;
    //     z-index: 2;
    //     background: url("../../images/Ellipse\ 1.png") no-repeat;
    //     background-position: center;
    // }
    // .rightBlur{
    //     position: absolute;
    //     right: 0;
    //     height: 900px;
    //     width: 134px;
    //     border-radius: 10%;
    //     z-index: 2;
    //     background: url("../../images/Ellipse\ 2.png") no-repeat;

    // }
  }

  @keyframes moveLeft {
    0% {
      transform: translateX(0vw);
    }

    100% {
      transform: translateX(-100vw);
    }
  }
}
